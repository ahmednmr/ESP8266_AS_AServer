Archive member included because of file (symbol)

c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
                              c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o (exit)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
                              ./main.o (__do_copy_data)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                              ./HAL/Nrf24.o (__do_clear_bss)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(itoa.o)
                              ./MCAL/UART.o (itoa)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(strrev.o)
                              c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(itoa.o) (strrev)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodhi4.o)
                              c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(itoa.o) (__udivmodhi4)

Allocating common symbols
Common symbol       size              file

temp                0x1               ./main.o
data_array          0x4               ./main.o
payload_len         0x1               ./HAL/Nrf24.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
LOAD ./MCAL/UART.o
LOAD ./MCAL/spi.o
LOAD ./HAL/Nrf24.o
LOAD ./main.o
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libm.a
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000      0x500
 *(.vectors)
 .vectors       0x00000000       0x54 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x00000054                . = ALIGN (0x2)
                0x00000054                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000054        0x0 linker stubs
 *(.trampolines*)
                0x00000054                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000054                __ctors_start = .
 *(.ctors)
                0x00000054                __ctors_end = .
                0x00000054                __dtors_start = .
 *(.dtors)
                0x00000054                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000054        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
                0x00000054                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000054        0xc c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000060       0x16 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
                0x00000060                __do_copy_data
 .init4         0x00000076       0x10 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                0x00000076                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000086        0x8 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 *(.init9)
 *(.text)
 .text          0x0000008e        0x4 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
                0x0000008e                __vector_1
                0x0000008e                __vector_12
                0x0000008e                __bad_interrupt
                0x0000008e                __vector_6
                0x0000008e                __vector_3
                0x0000008e                __vector_11
                0x0000008e                __vector_13
                0x0000008e                __vector_17
                0x0000008e                __vector_19
                0x0000008e                __vector_7
                0x0000008e                __vector_5
                0x0000008e                __vector_4
                0x0000008e                __vector_9
                0x0000008e                __vector_2
                0x0000008e                __vector_15
                0x0000008e                __vector_8
                0x0000008e                __vector_14
                0x0000008e                __vector_10
                0x0000008e                __vector_16
                0x0000008e                __vector_18
                0x0000008e                __vector_20
 .text          0x00000092        0x0 ./MCAL/UART.o
 .text          0x00000092        0x0 ./MCAL/spi.o
 .text          0x00000092        0x0 ./HAL/Nrf24.o
 .text          0x00000092        0x0 ./main.o
 .text          0x00000092        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .text          0x00000092        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 .text          0x00000092        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
 .text          0x00000092        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(itoa.o)
 .text          0x00000092        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(strrev.o)
 .text          0x00000092        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodhi4.o)
                0x00000092                . = ALIGN (0x2)
 *(.text.*)
 .text.init_UART
                0x00000092       0x10 ./MCAL/UART.o
                0x00000092                init_UART
 .text.UART_SendChar
                0x000000a2        0x8 ./MCAL/UART.o
                0x000000a2                UART_SendChar
 .text.UART_getChar
                0x000000aa        0x8 ./MCAL/UART.o
                0x000000aa                UART_getChar
 .text.UART_SEND_string
                0x000000b2       0x14 ./MCAL/UART.o
                0x000000b2                UART_SEND_string
 .text.UART_SEND_number
                0x000000c6       0x44 ./MCAL/UART.o
                0x000000c6                UART_SEND_number
 .text.SPI_MasterInit
                0x0000010a       0x10 ./MCAL/spi.o
                0x0000010a                SPI_MasterInit
 .text.SPI_Transmit
                0x0000011a        0xa ./MCAL/spi.o
                0x0000011a                SPI_Transmit
 .text.SPI_SlaveInit
                0x00000124        0x8 ./MCAL/spi.o
                0x00000124                SPI_SlaveInit
 .text.nrf24_csn_digitalWrite
                0x0000012c        0xc ./HAL/Nrf24.o
                0x0000012c                nrf24_csn_digitalWrite
 .text.nrf24_ce_digitalWrite
                0x00000138        0xc ./HAL/Nrf24.o
                0x00000138                nrf24_ce_digitalWrite
 .text.nrf24_getStatus
                0x00000144        0xc ./HAL/Nrf24.o
                0x00000144                nrf24_getStatus
 .text.nrf24_lastMessageStatus
                0x00000150       0x18 ./HAL/Nrf24.o
                0x00000150                nrf24_lastMessageStatus
 .text.nrf24_isSending
                0x00000168       0x10 ./HAL/Nrf24.o
                0x00000168                nrf24_isSending
 .text.nrf24_transferSync
                0x00000178       0x42 ./HAL/Nrf24.o
                0x00000178                nrf24_transferSync
 .text.nrf24_readRegister
                0x000001ba       0x26 ./HAL/Nrf24.o
                0x000001ba                nrf24_readRegister
 .text.nrf24_rxFifoEmpty
                0x000001e0       0x24 ./HAL/Nrf24.o
                0x000001e0                nrf24_rxFifoEmpty
 .text.nrf24_dataReady
                0x00000204       0x18 ./HAL/Nrf24.o
                0x00000204                nrf24_dataReady
 .text.nrf24_retransmissionCount
                0x0000021c       0x24 ./HAL/Nrf24.o
                0x0000021c                nrf24_retransmissionCount
 .text.nrf24_transmitSync
                0x00000240       0x26 ./HAL/Nrf24.o
                0x00000240                nrf24_transmitSync
 .text.nrf24_writeRegister
                0x00000266       0x26 ./HAL/Nrf24.o
                0x00000266                nrf24_writeRegister
 .text.nrf24_rx_address
                0x0000028c       0x10 ./HAL/Nrf24.o
                0x0000028c                nrf24_rx_address
 .text.nrf24_tx_address
                0x0000029c       0x20 ./HAL/Nrf24.o
                0x0000029c                nrf24_tx_address
 .text.nrf24_configRegister
                0x000002bc       0x1a ./HAL/Nrf24.o
                0x000002bc                nrf24_configRegister
 .text.nrf24_powerDown
                0x000002d6        0xc ./HAL/Nrf24.o
                0x000002d6                nrf24_powerDown
 .text.nrf24_powerUpTx
                0x000002e2       0x12 ./HAL/Nrf24.o
                0x000002e2                nrf24_powerUpTx
 .text.nrf24_getData
                0x000002f4       0x2a ./HAL/Nrf24.o
                0x000002f4                nrf24_getData
 .text.nrf24_send
                0x0000031e       0x32 ./HAL/Nrf24.o
                0x0000031e                nrf24_send
 .text.nrf24_powerUpRx
                0x00000350       0x20 ./HAL/Nrf24.o
                0x00000350                nrf24_powerUpRx
 .text.nrf24_config
                0x00000370       0x76 ./HAL/Nrf24.o
                0x00000370                nrf24_config
 .text.init_Nrf24
                0x000003e6        0xe ./HAL/Nrf24.o
                0x000003e6                init_Nrf24
 .text.main     0x000003f4       0x7e ./main.o
                0x000003f4                main
 .text.libgcc   0x00000472        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .text.libgcc   0x00000472        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 .text.libgcc   0x00000472        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
 .text.avr-libc
                0x00000472       0x42 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(itoa.o)
                0x00000472                itoa
 .text.avr-libc
                0x000004b4       0x20 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(strrev.o)
                0x000004b4                strrev
 .text.libgcc   0x000004d4       0x28 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodhi4.o)
                0x000004d4                __udivmodhi4
                0x000004fc                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x000004fc        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
                0x000004fc                exit
                0x000004fc                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x000004fc        0x4 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 *(.fini0)
                0x00000500                _etext = .

.data           0x00800060       0x66 load address 0x00000500
                0x00800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800060        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 .data          0x00800060        0x0 ./MCAL/UART.o
 .data          0x00800060        0x0 ./MCAL/spi.o
 .data          0x00800060        0x0 ./HAL/Nrf24.o
 .data          0x00800060       0x5b ./main.o
 .data          0x008000bb        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .data          0x008000bb        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 .data          0x008000bb        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
 .data          0x008000bb        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(itoa.o)
 .data          0x008000bb        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(strrev.o)
 .data          0x008000bb        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodhi4.o)
 *(.data*)
 .data.tx_address
                0x008000bb        0x5 ./main.o
                0x008000bb                tx_address
 .data.rx_address
                0x008000c0        0x5 ./main.o
                0x008000c0                rx_address
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x008000c6                . = ALIGN (0x2)
 *fill*         0x008000c5        0x1 00
                0x008000c6                _edata = .
                0x008000c6                PROVIDE (__data_end, .)

.bss            0x008000c6        0x7
                0x008000c6                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x008000c6        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 .bss           0x008000c6        0x0 ./MCAL/UART.o
 .bss           0x008000c6        0x0 ./MCAL/spi.o
 .bss           0x008000c6        0x0 ./HAL/Nrf24.o
 .bss           0x008000c6        0x0 ./main.o
 .bss           0x008000c6        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .bss           0x008000c6        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 .bss           0x008000c6        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
 .bss           0x008000c6        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(itoa.o)
 .bss           0x008000c6        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(strrev.o)
 .bss           0x008000c6        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodhi4.o)
 *(.bss*)
 .bss.q         0x008000c6        0x1 ./main.o
                0x008000c6                q
 *(COMMON)
 COMMON         0x008000c7        0x1 ./HAL/Nrf24.o
                0x008000c7                payload_len
 COMMON         0x008000c8        0x5 ./main.o
                0x008000c8                temp
                0x008000c9                data_array
                0x008000cd                PROVIDE (__bss_end, .)
                0x00000500                __data_load_start = LOADADDR (.data)
                0x00000566                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x008000cd        0x0
                0x008000cd                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x008000cd                PROVIDE (__noinit_end, .)
                0x008000cd                _end = .
                0x008000cd                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(RF_Module_RX.elf elf32-avr)
LOAD linker stubs
